ATTACHING MULTIPLE HANDLERS:

This is a very simple and straight forward concept , this say we can use multiple .then() functions with the same promise.

EXAMPLE:

let p1 = new Promise((resolve,reject)=>{
    console.log("I am not resolved yet!")
    setTimeout(() => {
        resolve(1)
    }, 2000);
})

p1.then((value)=>{
    console.log("This promise is resolved and it is first handler")
})

p1.then((value)=>{
    console.log("This promise is resolved and it is second handler!")
})

Here , you can see we use two .then() functions with the same promise. They both will execute together but synchronously. We can call multiple functions with each handler etc.

The difference bw promise chaining and attaching multipler handlers is that in promise chaining the next .then() statement works on the previous one and is dependent on the previous .then() statement as the previous one also contains a promise whose result is being used in the next .then()